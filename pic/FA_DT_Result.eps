%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1209.000000 598.500000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.5 (Build 16F73) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1209 599
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1209 599
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Helvetica
%!FontType1-1.0: Helvetica 1.0000.0.0000
14 dict begin/FontName /Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /A put
dup 34 /C put
dup 35 /T put
dup 36 /space put
dup 37 /less put
dup 38 /two put
dup 39 /six put
dup 40 /period put
dup 41 /five put
dup 42 /G put
dup 43 /P put
dup 44 /three put
dup 45 /eight put
dup 46 /four put
dup 47 /seven put
dup 48 /zero put
dup 49 /one put
dup 50 /nine put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C0000036C6670676D000000000000040800000A1D676C79660000000000000E2800000FB0686561640000000000001DD800000036686865610000000000001E1000000024686D74780000000000001E34000000506C6F63610000000000001E840000002A6D6178700000000000001EB000000020707265700000000000001ED0000003CF05C0001005BD00280580001A042F001F0000FFD90000FFDA0000FFD9FE55FFE605C70010FE6DFFF1033B000000B9000000B902FE3F3C00C0008D009B00AF000600A800C00028005E009800C9016A00B9015C00B400D6011E002E0080000400B8004C00CC01FFFFD1006600A400AF007400C2009500B1000C0028006D0015004C008E0125FF7A000C0040004C00620084FFA200240038008600BD0039005E008E00EDFFA9FFB300400052005500AA00AB00C200CB012302B10413FFAEFFE4000800510074008400AA00D1FF4CFFAF0012002C004200500051008400BE012503DAFF680018003B0098009C009F00A100C100EC018201B4FF68FF76FFD0FFE100020018001C00530053007D01B401E103AF0486FF9CFFEAFFFE001F0028002A00520060009300A300AA00AF00AF00C001000145016B0174019301950240028202B404850517FEFD00060029004700470048006F008800B400B900C400F200F901EF02180310037403C5FF35FFF3000B004B004C0052005500650076007600870087008E00AB00BB0106013001430150017D0194019501D3022A025502580277027802E6034E035C037903D3047304B2058C0598060BFEF5FFBBFFC7FFD50017001D005B0072007E009C00C200D000F400FA01030106011C0125013B0142015E015E0180019B02B901A101B9025001C001D002AA01DF01E301EF01FB0205020C0215022B0274029302AB02C202CE03690395039903DF03F5043E050205A105E5062507DBFE62FE89FECEFF3BFFE1FFF800030008002100390042004E005F0061006F00700034007F008E00AD00AD00AF00BD00C400C500C900C900C900E3011C00ED00F800F901000112011A0132014D014D014E014F01660169019E01BA01BA01BE01E301EF01F602000200020902110217021C02530262026D028002D50280031B032A034A035A03AF03AF03C803D603FB03FB04050413041504470449008C046D049A049A04A604A804B204CF0539053E054E055605800589058C036305D105D6067E068E06B206EF06F00728074C076F078C00B400C900C000C10000000000000000000000000004012400AF0032006E0063014401620096014301A10161008A00740064018801EF01700028FF5D037E0347023000AA00BE007B0062009A007D0089035C00A1FFD803AA00D70093006C0000008000A70442001D0597001D00820030002A


B080441BB04044591B21212045B0C05058B0C0441B2159592DB8004F2C2020456944B001602020457D691844B001602DB800502CB8004F2A2DB800512C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800522C4B535845441B2121592DB800532C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800542C2020456944B001602DB800552CB800542A212DB800562C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800572C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800582C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800592C2020456944B001602020457D691844B001602DB8005A2CB800592A2DB8005B2C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB8005C2C4B535845441B2121592D00000000020042000004D005BD000300070043B800532BB800082FB800042FB8000810B80000D0B800002FB8000410B80003DCB8000010B80007DCB8000310B80009DC00BA0007000000562BBA0002000500562B3031331121112711211142048EB8FCE205BDFA43B8044DFBB30000000100AF0000018000DA000300264013012A030A0517171A01640019040564216365182B2B4EF44DFD4E456544E6003F4DED313037331523AFD1D1DADA00000000020040FFD9041C0598000F001C00714017870501460815350F051C35070D1238036F18380B1E471D1076C418D4EDFDED003FED3FED313043794034001B0D2601251A2609250526160E18280014001228011B081828001006122801170C1528011302152801190A1C280011041C28002B2B2B2B012B2B2B2B2B2B2B2B2B81005D001716111007022120272611343712211236113402232202111417163303407C60577EFEE2FEFE7E693F7601358AA678AD9F932F48AE0598E5B1FECCFEDCBFFEEEE0BB013BF4AF0146FAE5F80152F4013BFED5FEDDDB85CB000000000100C4000002D5059200080023B10801B80133400C0404070C04079605000A47091076C418C4D5FD39003F3FF4CD313013353E013733112311C4C39A268EC003F68A1359A6FA6E03F6000000010040




2F27B80801400B1F2D1D4C1F2A31CD1F241DB802ABB21F201EB8012540111F1C1D931F3A1D4C1F1E1D45273A1D4527BB01AA019B002A019BB2254A1FBA019B0025017AB349293896B8017BB348283125B8017A403648289629482725294C1F252946272729482756C80784075B07410732072B072807260721071B071408120810080E080C080A08080807B801ACB23F1F06BB01AB003F001F01ABB308060805B801AEB23F1F04BB01AD003F001F01ADB70804080208000814B8FFE0B40000010014B801ABB41000000100B801ABB606100000010006B801ADB300000100B801AD401F04000001000410000001001002000001000200000001000002010802004A00B0018DB806008516763F183F123E113946443E113946443E113946443E113946443E113946443E11394660443E11394660443E11394660442B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B18011DB0964B5358B0AA1D59B0324B5358B0FF1D592B2B2B2B2B2B2B2B182B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B74752B2B2B65422B2B4B5279B376706A66456523456023456560234560B08B766818B080622020B16A704565234520B003266062636820B003266165B070236544B06A234420B176664565234520B003266062636820B003266165B066236544B0762344B10066455458B166406544B27640764523614459B36242725D456523456023456560234560B089766818B080622020B172424565234520B003266062636820B003266165B042236544B072234420B1625D4565234520B003266062636820B003266165B05D236544B0622344B1005D455458B15D406544B262406245236144592B2B2B2B456953427374B8019A2045694B20B02853B049515A58B020615944B801A6204569447500
00>] def
/CharStrings 20 dict dup begin
/.notdef 0 def
/space 1 def
/period 2 def
/zero 3 def
/one 4 def
/two 5 def
/three 6 def
/four 7 def
/five 8 def
/six 9 def
/seven 10 def
/eight 11 def
/nine 12 def
/less 13 def
/A 14 def
/C 15 def
/G 16 def
/P 17 def
/T 18 def
/u20B8 19 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4003230 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C92626C4DEA81D313B50D8F4EBFA95F2709469CAA9CCEDFB298F70C76D4064066B51A3E7122D8445FB76D103843B97FD9754E265280DDC6F446953A9588395A909112BC984513D851EFA38997C3C0657D846C0C0BB258F96A087EC8D2D74EFE2D6B52CC24835129D46D142F6A85D55BA65DDB75E8E38BEA189F0B983154A77B58F7950778870386CDB8DFD9EC3844B6278885998EAB67ED37C01E7931FB6BBE3E1E6BD0B4A16E605CED531412E7ED17AD708B5D2AADD3A8A09ECFE14C54658DCB74C11AA048D0C26592B4B04273F210CA4F584104AB0FF57D9444B55C29A805E6644F77DD05B7F2CD02D7C58D1C26EAEA94E42801F9E98372CF12EB5F0E1A26807285DB7769F2323E7F3E0EE4A13E7071C1A11F642C189F586CDA259E74EACE3F296631AFE7B2435E2C9C678625226B4A76DC77E27C1640ECC395D2D1884F9C8740224C5ADB6925CA1CAF535CA19235C9FBD617649658E4D5E78017A45E56655D27D43B3980406A09528BCE370F34F12CD32AB42A254F63853CB1241059C2FA2916067EA2CF61F1872F7B9EC315BFB99FE544B5F65FE3BC0DD86261CE4E510F88815988E943641AC098D4EE3FEA4AD959FE5CB1EA71EC6BD7DECDB76082F58641977C1E61F2D36C41139B1349A8761B0971EBB202564B1DC116E0C515FCB9D40E513C46AA20224BF3D84BFCB75532C2A2AF78A5362D41F7EFB21B684A68672EE091A6BBB492929890D855D445525F2F842028B8A1D2B814231271E6862C94265A8A
0101F7BC1B03119225A2DCDACF22EA0839B19B95812AAE9A1B5CCE667DF8EBF4053895BF8D82265B2056AD0BE58CC97450273CA61EB16F1C5FA1A0D3FBE58B1920D231D04A3314317D274AAF05E715A6E6502DE1DE3DC5B15886A3F72EE82C2D2558E3ABA301F82D6A10C476016BF9C3BAF34F763225DB99C1A57B840418936A3F3A0EC814E195971EBB6D4B5688982CD6EBC4A76597C78676D3CABF8DFCA980007BCD4A5A2551F5927C3A7A13DC2135C0328344EF2C6B45625B23AC547D2C9D995870304873E509DCA17E19C5F1437EF5ED81C2788749636B1FCDCA5AD484DF1C41E8FEDF912B4072C3562D5813BC0F4F0C89AAA1210B43FDB1BBACE4EF8B93BD67EE64F967798F6CAA01ABA1480C1FFC43FDDB34FC21B60930EEC9DFC204AA7999043999860AFABF3886835F67496DE6AAE5348C5254006DE961846C1CD7DEF6F66AE9D2BB439E1AFB8AA26966816FEE641881561998508701CCCF39A3D3069BA9EFFE4835C61458C68FAD2C516289A5AC9977AE4CB2FF8200C3C577C1AB8A824204A626E1386EF4C632F366B1F0D1B3F07A324A12634B5514395EC62A5B48F4BD101271BDE3FC575CE029F1B76E58F4084450FE6E32192A3E51CACF25762155FD1E38E2D0B9B0EB227C2D0B1A0B3573D6B71D4F7340B206E264A4AEACCA9AE28D011736ED60126F023C8AC075D90C8EEBFBC20D2366B9DA63740BF3118BF0EAA73DF69ABECA98654C6DE2202436FD919FF472B5E42B546BEE5A46198032CBA31770DB792F8F988DC1B46B35A1016B22AD68C401D97E27E2FF54967C8FCB33A8719A2E356604BD333DB11E40F83F474F69051A39DFDB7FA0DF8E990CA3D10F6D5535CE41B248C42CA6F08212403C2D74EC8CD498A619AAC3020A3ED68963B300EC6CA256D2D08558EB369D7C0426A1AEAA55EBFE8DF3B702120302BF6A868F19BF6E0B7440AA2780651FF71D95CC3955FA7AA620F005F54B3EA93D61611A0AFE053B1D0DE6F1C75D5385E92D1FD04CA8C90CEAABF109BBCB6DBBDD7A1F05D0ACB64AF2D887D0FD5166008EBC8B9CE846BB7330EA23A40A655141F7696F13866640524358182C442A70F6C07C97EB66791637233B986CEFFA8230E97B1A7CB455B5387FDDF7F8301304FDF52C720FC514424BD1E1D46A1EB093482726C4C3804A3FCB1AE99B35DB8FD6AF781B899FE898773BCC736041C417540427B35E34E7F59B9FFB2C15357BCEA3ED73FB24C30B463180FA69CAACCF52870DB0610D59B181816E2AF6A9671BC92CA61EFB3D03D026F5048A3CC927F82FA3125AAF532AB95579406C6BF163E615B3080C63361E33CD423521764A57687753EB3E5754179A4D91D2EDD29696C3CCE355A52105729252880676D057CA8E95BBE16276E8CCC4CBA753373A866BCD6B6AF4191B2C80532042EF6304B0FDEEF0D5F0DDB074B048
5D4F338FA4C62ABAA0340BE5DDD96A0A2804A276BA5D741B3F10430F098CA3BE4D696BE02C76EAE81BBABEFF005988FDDDA5BDC28768FED1A4C3F17368141A09341D6F9CF63F8F38BF56E717F665B9448AB82907ECDFB045759937CB9C91F6712604F28231D02614CCA0884DD4DDB3915A98449B638C9F807CB7ACE4909EBF0D518B1E14947C3D0AF1CB630271559AA62763B8B906E4B0BB3383E60377161EDB0EB53CF0DA84CD735EF75915E531B62C19D3CEAE4937C6300CD44F35F1DC1E71335DEE743ABECB07B11297D85CF18418E07246DC077868E3380112AF34943F0AFE1025F9D460FB5AB982D13603C8148B76859FFBD53E21B888C706500EFC44673A8DB4E172146800B9E313FA558B9398A6731B5DCF2648D9E0895326ED672E69DE71D247332017FADB51CF2A951672131DC7B2584B21E018CF5F3AF37A35CAFA74043033CE2AB10468402908F007BDFAE15B74851A154C6DDB26AF29F2EE101C3D013B2990EA4BDA97D3AF5B9EAD54C246A8716143588080CD60F586DBB2775EFBB40329049FBA954DB229C71DE101F6D4F68E429FD63B3C57F71CD20EDBFA6DB829AC58DB0702A7BF003BC94F037D87007B4136A23886D0EF7B405DD60539469988A565491940B91D0D174CA707BE039FC07B2671C6D0E12284EF78B2580DEA47679F9F1A27E89C54BEE78FF11F3FC25F318C79BB5491A71A41C859A5D3E6614A3B304F6328D688FD56CED9FB16454E9F47E639D4F588E37351897AEF612431DA7756F16A6DD8B4F3047D8464AD3E62BC9A066C9D811B0064764A48B530E6F335C2D0CE55C39C9FBEEB9890DFD8E964D40A76B32CB8F6F875F443617C4EA54C8A63034CA2A65DBEF4142C7D8391C02C90B6F0544D7E7D6981A958B1086F10028318A50EB14FA15F1463B459E9341F73AEF33B5D1C90235612D99AADC762DDE6B28A585FCF39C55B1FEE1B98942FE425736F50D1A170752B4D3437D3A14A0737F44B557341A65E29E2A75C2C60C640288E4A326CD32347BBE72114FF885392F166A48059A02EC491585480A766254FD2AE3E45476E4E7BE9ABAF3E37D1A9147E2CD22D6ABA6C0421AC827632CBCAE38C962B9C46AAAC7F7729708569C5B4844E9D446EEDF4C5D5263018923D125C960129FE151B0D0C842CC3347ED810AAFE26CDFE01A844F5EBF5980FB8A447859AA2D2C8B8643D0447527AF9CE232D5BF07ABCA0DCD961270840BADE5DDA867471BBA84A3173FC0FCEA203D4153F874F2B8E186A34C7921669407607974058485157303CE456FA03B67CCEE64AF4B93463FCF419C97F5467AFF1D82EDF2100B37164B4ED64CD70004A74D9CAB22FD43470358ABEA11365C49FCFC8CB52B9B08F8E642999DE35907610678A0D464E940660A791C8A0FED29FC397A92DD1767D946E1FA98466A66BA3CC8E928BE644C3A74440
E8A13407675BF792324076A91BC2BD95F48B94F6DFBAD4F3717902EF376FE3E37D8E7BB7E4E0FE0227FEDB4F15A3342EDEFD9C728985C32793A59BC66A80A3E1AED948974605C7FC5CFD7C2F0CFDB85B49365F3615D58D5A94D26B91194542EC3B2848CD6FAE2EF7819D9BE3FDF693378B331AC69AF7B7A31D39D8A1297DA66818B1CF055BCDFF89F314986AD00EA97A73364BC16D6F3A3ECBB5FA498B9045F54D9953543411AE14C4ABCAD0AFD8D1E5A849E05D27A183913522F9899434ABAF1A624CC32D71AED025F63A60F0714FC8A8C6D90898AF43136540A0F58197ECE1777DCD5D2887B49755431A18698AD45186B283AC6F78D8B1CE6CC3A99EABE76826DA65DB4105118C84
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Helvetica cguidfix
/F1.1/Helvetica renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /Y put
dup 34 /E put
dup 35 /S put
dup 36 /N put
dup 37 /O put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 7 dict dup begin
/.notdef 0 def
/E 1 def
/N 2 def
/O 3 def
/S 4 def
/Y 5 def
/uni2B91 6 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4243299 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C977ACEB10D7B7CCAA782B3E10A4BEAFD6991C7A5E7DAF786CA93E9C7130DEBD28BA4C9AFE439E5989355A2D991A3C3DD3969DFF96D799CE7A3D70FB31B7161B2FFE548FD50365A5C79771B29326909D8CC8E92B8DA01FDFE548DFD49251849091981A9F2311B1FC248847338603E8CF35903AE6659D814C0A19F70121C9D6A2701A76253BE2B9A8639B0395BD57F1466850CBEF1D45A6958C937F267664F1780CB412178B80A3C9C43546972850457241449BB7582C472A27522BDE66951F71BED2BEB9C4BEE54712801778F51301B02C90D0778F9BA037138427B19682F91125BAA8C036A95AECB48A6393BD198E09F76CCAE629EE243D3EAF9F8E16DC4977A342F5A6F59CB5D0ED6FF44C5F85CBF3E6F10CF250EAFDB4335CBC03E77AA6AA9C157E3A21CFBA0B91508FDD642ACCC998EDE50ACE023313FBB60E3B381F510FE022921A705526AEB7EE69CAD87AFDDD6C942CA0C7CE934DC4FF75EA335E73414CC5D09AEDA688EF5EC211268A2CC468D3E708C2CBC5D652AE9A05555F57ED0CB85DDAA28379F161B8C11AFFBCDEA48CD5CDCA19A5DA7D6F749F7E0F71E7622ECAA895C17FA1185A893A9B9673FAAB1CD1AE2857EDDE0616294B027704870354870A5A5FA1F1E97A39F1B72D2F29CB88EC9A5E40D04895AD0249E1986E19CD96472EF0C336765059787BFC5F9D91D74BE437CA3281C47EB046A88742D67004791C4AC5EDA5DD59DCF53586F1AD512C8415B5A04F3D7D6069F88681F561511BE192D
AC41F74D925AC84985196012918FE5964F3BEB23963E00D83BE61D45F08074CCCA4F021ED553A2BF69D66BAA747BAD6DE08567F331338D19F347645C571DF7968ACDB115BAE3D4044545EA110329C86F7C48AEF60D757632DE9D2F0F0CEE9319976310B8A6D3C555EABFA08FB676DF4291E481F6A8E2D6BE2D3266B253EAA178D967C37666C6C385111C5C00788984EBE09E41361D0F1B0D10060BC67BDAEB8871D48C4454813E763AF96C722652E31782003A88D5C787F412F95C0936573A90C5633C422CFBDF639C9AEC04873E0C3E7B47333E55653C1D6EA6CCF9C5E73FFE91275F563AA2FE15F522ECF845E179A00231E6F60F51D2595BB042899900A1318305FC67F9C95950B3DBD0F9BA91BBC13C7E3AE7EA95CC114D26ADB6C327D21298E5341DD7160A5289C8484A97449BFB98153A17764457BD016B8B5151032C3E91B6336501DDD23DA72DE6A80CD3ECDEFA9E6A29EF23CA33F02B60D234B63C3B71721147204CD82A8A259893CB0F12E1B9194274FD430BAEC056986BCED4866B67009EBA97225B9064C718B48BDA4F226FD6D30BC3B04844E12C15E9B95BAF27DBFE4D7C8B80622903AB5B3D0936BB03D3E6B511DA173A506E8ED657AA2BC7B79809DFE9E41A22662308087589DD4C378E94D230DD497A1377CFA4F71F3581341060CD0DF55F9BA1709767D1408F77854574EF054BC18824B77200498A2FFC8176DD784C43B7BDF546C0E80EE9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F2.1/HelveticaNeue renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 1209 598.5 rc
0 598.5 m
1209 598.5 l
1209 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-1031.4091 1980.3182 m
2239.5 1980.3182 l
2239.5 -1381.5 l
-1031.4091 -1381.5 l
h
-1031.4091 1980.3182 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 190.5 658.5 cm
639.96198 406 m
709.09167 502.21658 l
S
620.66669 406 m
615.33289 506.00882 l
S
660.91986 275 m
690.91541 300.92987 l
S
630.09161 275 m
623.90839 356 l
S
897.60303 275 m
952.2395 357.26871 l
S
872.03052 275 m
842.82935 356.39062 l
S
755.73914 183 m
834.26086 225 l
S
688.07611 183 m
652.92389 225 l
S
445.5 406 m
495.8714 506.74277 l
S
427.83334 406 m
407.13947 506.13162 l
S
310.46295 518 m
404.43259 605.94385 l
S
286.45834 518 m
295.67059 603.03638 l
S
168.6684 509 m
180.58791 603.04974 l
S
147.96645 509 m
77.549545 609.40302 l
S
215.19865 406 m
264.05133 468 l
S
188.21844 406 m
172.78156 459 l
S
18.731958 401 m
48.358345 496.79199 l
S
-2.8513513 401 m
-57.649063 499.9032 l
S
30.035715 275 m
-110.27241 369.89438 l
S
55.888889 275 m
22.111111 351 l
S
330.16177 270 m
409.83823 356 l
S
286.50366 270 m
215.99632 356 l
S
259.25287 183 m
287.74713 220 l
S
192.98914 183 m
114.01087 225 l
S
488 98.876381 m
659 144.62361 l
S
388 103.80808 m
290 139.69193 l
S
0 i
1 1 1 sc
CM
578.5 598 m
678.5 598 l
678.5 548 l
578.5 548 l
h
578.5 598 m
f
0.60000002 i
1 0 0 -1 190.5 658.5 cm
388 60.5 m
488 60.5 l
488 110.5 l
388 110.5 l
h
388 60.5 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 628.5 573 cm
/F1.1[ 17 0 0 -17 0 0]sf
-43.081055 6 m
(!"#$%$&'\(\))[ 11.338867 12.276855 10.085449 4.723145 9.927734 4.723145 9.454590 9.454590 4.723145 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
849.5 525.5 m
949.5 525.5 l
949.5 475.5 l
849.5 475.5 l
h
849.5 525.5 m
f
0.60000002 i
1 0 0 -1 190.5 658.5 cm
659 133 m
759 133 l
759 183 l
659 183 l
h
659 133 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 899.5 500.5 cm
-43.089355 6 m
(*+!$%$,\(-\))[ 13.223145 10.085449 10.409180 4.723145 9.927734 4.723145 9.454590 4.723145 9.454590 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
380.5 525.5 m
480.5 525.5 l
480.5 475.5 l
380.5 475.5 l
h
380.5 525.5 m
f
0.60000002 i
1 0 0 -1 190.5 658.5 cm
190 133 m
290 133 l
290 183 l
190 183 l
h
190 133 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 430.5 500.5 cm
-43.089355 6 m
(*+!$%$,\(.\))[ 13.223145 10.085449 10.409180 4.723145 9.927734 4.723145 9.454590 4.723145 9.454590 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
447.5 438.5 m
547.5 438.5 l
547.5 388.5 l
447.5 388.5 l
h
447.5 438.5 m
f
0.60000002 i
1 0 0 -1 190.5 658.5 cm
257 220 m
357 220 l
357 270 l
257 270 l
h
257 220 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 497.5 413.5 cm
-43.081055 6 m
(!"#$%$&.\(\))[ 11.338867 12.276855 10.085449 4.723145 9.927734 4.723145 9.454590 9.454590 4.723145 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
207.5 433.5 m
307.5 433.5 l
307.5 383.5 l
207.5 383.5 l
h
207.5 433.5 m
f
0.60000002 i
1 0 0 -1 190.5 658.5 cm
17 225 m
117 225 l
117 275 l
17 275 l
h
17 225 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 257.5 408.5 cm
-43.081055 6 m
(!"#$%$&&\(\))[ 11.338867 12.276855 10.085449 4.723145 9.927734 4.723145 9.454590 9.454590 4.723145 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
573.5 302.5 m
673.5 302.5 l
673.5 252.5 l
573.5 252.5 l
h
573.5 302.5 m
f
0.60000002 i
1 0 0 -1 190.5 658.5 cm
383 356 m
483 356 l
483 406 l
383 406 l
h
383 356 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 623.5 277.5 cm
-43.089355 6 m
(*+!$%$,\(-\))[ 13.223145 10.085449 10.409180 4.723145 9.927734 4.723145 9.454590 4.723145 9.454590 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
336 302.5 m
436 302.5 l
436 252.5 l
336 252.5 l
h
336 302.5 m
f
0.60000002 i
1 0 0 -1 190.5 658.5 cm
145.5 356 m
245.5 356 l
245.5 406 l
145.5 406 l
h
145.5 356 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 386 277.5 cm
-43.089355 6 m
(*+!$%$,\(/\))[ 13.223145 10.085449 10.409180 4.723145 9.927734 4.723145 9.454590 4.723145 9.454590 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
85.855301 286.17764 m
105.3816 276.41455 105.3816 260.58545 85.855301 250.82236 c
66.329102 241.0592 34.670898 241.0592 15.1447 250.82236 c
-4.3815999 260.58545 -4.3815999 276.41455 15.1447 286.17764 c
34.670898 295.9408 66.329102 295.9408 85.855301 286.17764 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 190.5 658.5 cm
-104.6447 372.32236 m
-85.118401 382.08545 -85.118401 397.91455 -104.6447 407.67764 c
-124.1709 417.4408 -155.8291 417.4408 -175.3553 407.67764 c
-194.88161 397.91455 -194.88161 382.08545 -175.3553 372.32236 c
-155.8291 362.5592 -124.1709 362.5592 -104.6447 372.32236 c
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 50.5 268.5 cm
-16.543457 6 m
(&&\(-)[ 9.454590 9.454590 4.723145 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
151.5 307.5 m
251.5 307.5 l
251.5 257.5 l
151.5 257.5 l
h
151.5 307.5 m
f
0.60000002 i
1 0 0 -1 190.5 658.5 cm
-39 351 m
61 351 l
61 401 l
-39 401 l
h
-39 351 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 201.5 282.5 cm
-43.089355 6 m
(*+!$%$,\(0\))[ 13.223145 10.085449 10.409180 4.723145 9.927734 4.723145 9.454590 4.723145 9.454590 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
281.85529 154.67764 m
301.38159 144.91455 301.38159 129.08545 281.85529 119.32235 c
262.3291 109.5592 230.6709 109.5592 211.1447 119.32235 c
191.61839 129.08545 191.61839 144.91455 211.1447 154.67764 c
230.6709 164.4408 262.3291 164.4408 281.85529 154.67764 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 190.5 658.5 cm
91.355301 503.82236 m
110.8816 513.58545 110.8816 529.41455 91.355301 539.17767 c
71.829102 548.9408 40.170898 548.9408 20.644699 539.17767 c
1.1184 529.41455 1.1184 513.58545 20.644699 503.82236 c
40.170898 494.0592 71.829102 494.0592 91.355301 503.82236 c
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 246.5 137 cm
-14.181885 6 m
(//.)[ 9.454590 9.454590 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
154.8553 152.17764 m
174.38161 142.41455 174.38161 126.58545 154.8553 116.82235 c
135.3291 107.0592 103.6709 107.0592 84.144699 116.82235 c
64.618401 126.58545 64.618401 142.41455 84.144699 152.17764 c
103.6709 161.9408 135.3291 161.9408 154.8553 152.17764 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 190.5 658.5 cm
-35.644699 506.32236 m
-16.118401 516.08545 -16.118401 531.91455 -35.644699 541.67767 c
-55.170898 551.4408 -86.829102 551.4408 -106.3553 541.67767 c
-125.8816 531.91455 -125.8816 516.08545 -106.3553 506.32236 c
-86.829102 496.5592 -55.170898 496.5592 -35.644699 506.32236 c
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 119.5 134.5 cm
-16.543457 6 m
(/.\(1)[ 9.454590 9.454590 4.723145 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
424.25 190.5 m
524.25 190.5 l
524.25 140.5 l
424.25 140.5 l
h
424.25 190.5 m
f
0.60000002 i
1 0 0 -1 190.5 658.5 cm
233.75 468 m
333.75 468 l
333.75 518 l
233.75 518 l
h
233.75 468 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 474.25 165.5 cm
-43.081055 6 m
(!"#$%$&&\(\))[ 11.338867 12.276855 10.085449 4.723145 9.927734 4.723145 9.454590 9.454590 4.723145 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
306 199.5 m
406 199.5 l
406 149.5 l
306 149.5 l
h
306 199.5 m
f
0.60000002 i
1 0 0 -1 190.5 658.5 cm
115.5 459 m
215.5 459 l
215.5 509 l
115.5 509 l
h
115.5 459 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 356 174.5 cm
-43.081055 6 m
(!"#$%$12\(\))[ 11.338867 12.276855 10.085449 4.723145 9.927734 4.723145 9.454590 9.454590 4.723145 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
409.60529 48.17765 m
429.13159 38.414551 429.13159 22.585449 409.60529 12.82235 c
390.0791 3.0592 358.4209 3.0592 338.89471 12.82235 c
319.36841 22.585449 319.36841 38.414551 338.89471 48.17765 c
358.4209 57.9408 390.0791 57.9408 409.60529 48.17765 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 190.5 658.5 cm
219.1053 610.32233 m
238.63161 620.08545 238.63161 635.91455 219.1053 645.67767 c
199.5791 655.4408 167.9209 655.4408 148.3947 645.67767 c
128.86839 635.91455 128.86839 620.08545 148.3947 610.32233 c
167.9209 600.5592 199.5791 600.5592 219.1053 610.32233 c
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 374.25 30.5 cm
-14.181885 6 m
(-&2)[ 9.454590 9.454590 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
286.85529 43.17765 m
306.38159 33.414551 306.38159 17.585449 286.85529 7.82235 c
267.3291 -1.9408 235.6709 -1.9408 216.1447 7.82235 c
196.61839 17.585449 196.61839 33.414551 216.1447 43.17765 c
235.6709 52.9408 267.3291 52.9408 286.85529 43.17765 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 190.5 658.5 cm
96.355301 615.32233 m
115.8816 625.08545 115.8816 640.91455 96.355301 650.67767 c
76.829102 660.4408 45.170898 660.4408 25.644699 650.67767 c
6.1184001 640.91455 6.1184001 625.08545 25.644699 615.32233 c
45.170898 605.5592 76.829102 605.5592 96.355301 615.32233 c
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 251.5 25.5 cm
-16.543457 6 m
(&&\(\))[ 9.454590 9.454590 4.723145 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
653.85529 48.17765 m
673.38159 38.414551 673.38159 22.585449 653.85529 12.82235 c
634.3291 3.0592 602.6709 3.0592 583.14471 12.82235 c
563.61841 22.585449 563.61841 38.414551 583.14471 48.17765 c
602.6709 57.9408 634.3291 57.9408 653.85529 48.17765 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 190.5 658.5 cm
463.35529 610.32233 m
482.88159 620.08545 482.88159 635.91455 463.35529 645.67767 c
443.8291 655.4408 412.1709 655.4408 392.64471 645.67767 c
373.11841 635.91455 373.11841 620.08545 392.64471 610.32233 c
412.1709 600.5592 443.8291 600.5592 463.35529 610.32233 c
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 618.5 30.5 cm
-18.90918 6 m
(1-'1)[ 9.454590 9.454590 9.454590 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
524.23029 48.17765 m
543.75659 38.414551 543.75659 22.585449 524.23029 12.82235 c
504.7041 3.0592 473.0459 3.0592 453.51971 12.82235 c
433.99341 22.585449 433.99341 38.414551 453.51971 48.17765 c
473.0459 57.9408 504.7041 57.9408 524.23029 48.17765 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 190.5 658.5 cm
333.73029 610.32233 m
353.25659 620.08545 353.25659 635.91455 333.73029 645.67767 c
314.2041 655.4408 282.5459 655.4408 263.01971 645.67767 c
243.49339 635.91455 243.49339 620.08545 263.01971 610.32233 c
282.5459 600.5592 314.2041 600.5592 333.73029 610.32233 c
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 488.875 30.5 cm
-14.181885 6 m
(20')[ 9.454590 9.454590 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
733.85529 145.17764 m
753.38159 135.41455 753.38159 119.58545 733.85529 109.82235 c
714.3291 100.0592 682.6709 100.0592 663.14471 109.82235 c
643.61841 119.58545 643.61841 135.41455 663.14471 145.17764 c
682.6709 154.9408 714.3291 154.9408 733.85529 145.17764 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 190.5 658.5 cm
543.35529 513.32233 m
562.88159 523.08545 562.88159 538.91455 543.35529 548.67767 c
523.8291 558.4408 492.1709 558.4408 472.64471 548.67767 c
453.11841 538.91455 453.11841 523.08545 472.64471 513.32233 c
492.1709 503.5592 523.8291 503.5592 543.35529 513.32233 c
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 698.5 127.5 cm
-18.90918 6 m
(&'-&)[ 9.454590 9.454590 9.454590 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
627.85529 145.17764 m
647.38159 135.41455 647.38159 119.58545 627.85529 109.82235 c
608.3291 100.0592 576.6709 100.0592 557.14471 109.82235 c
537.61841 119.58545 537.61841 135.41455 557.14471 145.17764 c
576.6709 154.9408 608.3291 154.9408 627.85529 145.17764 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 190.5 658.5 cm
437.35529 513.32233 m
456.88159 523.08545 456.88159 538.91455 437.35529 548.67767 c
417.8291 558.4408 386.1709 558.4408 366.64471 548.67767 c
347.11841 538.91455 347.11841 523.08545 366.64471 513.32233 c
386.1709 503.5592 417.8291 503.5592 437.35529 513.32233 c
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 592.5 127.5 cm
-18.90918 6 m
(12,\))[ 9.454590 9.454590 9.454590 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
1021.5 433.5 m
1121.5 433.5 l
1121.5 383.5 l
1021.5 383.5 l
h
1021.5 433.5 m
f
0.60000002 i
1 0 0 -1 190.5 658.5 cm
831 225 m
931 225 l
931 275 l
831 275 l
h
831 225 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 1071.5 408.5 cm
-43.081055 6 m
(!"#$%$&-\(\))[ 11.338867 12.276855 10.085449 4.723145 9.927734 4.723145 9.454590 9.454590 4.723145 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
772.5 433.5 m
872.5 433.5 l
872.5 383.5 l
772.5 383.5 l
h
772.5 433.5 m
f
0.60000002 i
1 0 0 -1 190.5 658.5 cm
582 225 m
682 225 l
682 275 l
582 275 l
h
582 225 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 822.5 408.5 cm
-43.081055 6 m
(!"#$%$&2\(\))[ 11.338867 12.276855 10.085449 4.723145 9.927734 4.723145 9.454590 9.454590 4.723145 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
1059.8553 295.17764 m
1079.3816 285.41455 1079.3816 269.58545 1059.8553 259.82236 c
1040.3291 250.0592 1008.6709 250.0592 989.14471 259.82236 c
969.61841 269.58545 969.61841 285.41455 989.14471 295.17764 c
1008.6709 304.9408 1040.3291 304.9408 1059.8553 295.17764 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 190.5 658.5 cm
869.35529 363.32236 m
888.88159 373.08545 888.88159 388.91455 869.35529 398.67764 c
849.8291 408.4408 818.1709 408.4408 798.64471 398.67764 c
779.11841 388.91455 779.11841 373.08545 798.64471 363.32236 c
818.1709 353.5592 849.8291 353.5592 869.35529 363.32236 c
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 1024.5 277.5 cm
-18.90918 6 m
(.1.&)[ 9.454590 9.454590 9.454590 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
940.85529 353.54376 m
960.38159 344.26883 960.38159 329.23117 940.85529 319.95624 c
921.3291 310.68124 889.6709 310.68124 870.14471 319.95624 c
850.61841 329.23117 850.61841 344.26883 870.14471 353.54376 c
889.6709 362.81876 921.3291 362.81876 940.85529 353.54376 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 190.5 658.5 cm
750.35529 304.95624 m
769.88159 314.23117 769.88159 329.26883 750.35529 338.54376 c
730.8291 347.81876 699.1709 347.81876 679.64471 338.54376 c
660.11841 329.26883 660.11841 314.23117 679.64471 304.95624 c
699.1709 295.68124 730.8291 295.68124 750.35529 304.95624 c
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 905.5 336.75 cm
-18.90918 6 m
(.&.,)[ 9.454590 9.454590 9.454590 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
762.5 302.5 m
862.5 302.5 l
862.5 252.5 l
762.5 252.5 l
h
762.5 302.5 m
f
0.60000002 i
1 0 0 -1 190.5 658.5 cm
572 356 m
672 356 l
672 406 l
572 406 l
h
572 356 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 812.5 277.5 cm
-43.089355 6 m
(*+!$%$,\(,\))[ 13.223145 10.085449 10.409180 4.723145 9.927734 4.723145 9.454590 4.723145 9.454590 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
951.85529 150.42764 m
971.38159 140.66455 971.38159 124.83545 951.85529 115.07235 c
932.3291 105.3092 900.6709 105.3092 881.14471 115.07235 c
861.61841 124.83545 861.61841 140.66455 881.14471 150.42764 c
900.6709 160.1908 932.3291 160.1908 951.85529 150.42764 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 190.5 658.5 cm
761.35529 508.07236 m
780.88159 517.83545 780.88159 533.66455 761.35529 543.42767 c
741.8291 553.1908 710.1709 553.1908 690.64471 543.42767 c
671.11841 533.66455 671.11841 517.83545 690.64471 508.07236 c
710.1709 498.3092 741.8291 498.3092 761.35529 508.07236 c
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 916.5 132.75 cm
-18.90918 6 m
(&,0')[ 9.454590 9.454590 9.454590 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
839.85529 145.17764 m
859.38159 135.41455 859.38159 119.58545 839.85529 109.82235 c
820.3291 100.0592 788.6709 100.0592 769.14471 109.82235 c
749.61841 119.58545 749.61841 135.41455 769.14471 145.17764 c
788.6709 154.9408 820.3291 154.9408 839.85529 145.17764 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 190.5 658.5 cm
649.35529 513.32233 m
668.88159 523.08545 668.88159 538.91455 649.35529 548.67767 c
629.8291 558.4408 598.1709 558.4408 578.64471 548.67767 c
559.11841 538.91455 559.11841 523.08545 578.64471 513.32233 c
598.1709 503.5592 629.8291 503.5592 649.35529 513.32233 c
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 804.5 127.5 cm
-18.282471 6 m
(11'/)[ 8.201172 9.454590 9.454590 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
1193.8553 295.17764 m
1213.3816 285.41455 1213.3816 269.58545 1193.8553 259.82236 c
1174.3291 250.0592 1142.6709 250.0592 1123.1447 259.82236 c
1103.6184 269.58545 1103.6184 285.41455 1123.1447 295.17764 c
1142.6709 304.9408 1174.3291 304.9408 1193.8553 295.17764 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 190.5 658.5 cm
1003.3553 363.32236 m
1022.8816 373.08545 1022.8816 388.91455 1003.3553 398.67764 c
983.8291 408.4408 952.1709 408.4408 932.64471 398.67764 c
913.11841 388.91455 913.11841 373.08545 932.64471 363.32236 c
952.1709 353.5592 983.8291 353.5592 1003.3553 363.32236 c
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 1158.5 277.5 cm
-18.90918 6 m
(\),'2)[ 9.454590 9.454590 9.454590 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
470.5 578.5 m
538.875 578.5 l
538.875 560.5 l
470.5 560.5 l
h
470.5 578.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 190.5 658.5 cm
280 80 m
348.375 80 l
348.375 98 l
280 98 l
h
280 80 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 504.6875 569.5 cm
/F2.1[ 16 0 0 -16 0 0]sf
-15.256 5.776001 m
(!"#)[ 10.368000 9.776000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
718.125 582 m
786.5 582 l
786.5 564 l
718.125 564 l
h
718.125 582 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 190.5 658.5 cm
527.625 76.5 m
596 76.5 l
596 94.5 l
527.625 94.5 l
h
527.625 76.5 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 752.3125 573 cm
-11.856 5.776001 m
($%)[ 11.552000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
